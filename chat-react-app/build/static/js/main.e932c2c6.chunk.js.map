{"version":3,"sources":["Input.js","UsersPanel.js","MessagesList.js","Home.js","Button.js","Signup.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","inputMessage","target","value","setState","input","handleMessagePost","preventDefault","state","userId","localStorage","getItem","fetch","method","headers","Content-Type","body","JSON","stringify","message","then","catch","error","console","log","react_default","a","createElement","className","onSubmit","type","scrolling","name","placeholder","onChange","autoComplete","Component","UsersPanel","getUsers","res","json","data","signedInUserId","signedUser","filter","user","signed_in_user_id","parse","length","setItem","window","location","href","users","setInterval","map","index","key","MessagesList","handleOnSentMessage","onLoadMessages","onNewMessageAdd","messages","sort","b","message_id","doScroll","changeToEditMode","editModeId","isInEditMode","cancelEditMode","changeEditMode","handleEditMessage","handleDeleteMessage","messageId","url","concat","handleEditMessageInputChanges","messagesEnd","React","createRef","scrollToEnd","current","scrollIntoView","behaviour","_this2","_this$state","id","autoFocus","onFocus","defaultValue","rows","spellCheck","style","display","onClick","float","position","user_id","confirm","ref","Home","handleLogout","isError","top","right","src_UsersPanel_0","src_MessagesList_0","src_Input","react_router","to","Button","Signup","email","password","defineProperty","handleSubmit","required","src_Button","react_router_dom","Login","onLogin","success","signedIn","handleInputChange","App","path","exact","component","isLoggedIn","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e932c2c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Input.css\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const inputMessage = e.target.value;\n    this.setState({\n      input: inputMessage\n    });\n  };\n\n  handleMessagePost = e => {\n    e.preventDefault();\n    if (!this.state.input) return;\n    const url = \"http://localhost:3002/api/messages\";\n    const userId = localStorage.getItem(\"userId\");\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        message: this.state.input\n      })\n    })\n      .then(() => {\n        this.setState({\n          input: \"\"\n        });\n      })\n      .catch(error => console.log(\"Error\", \"input a message\"));\n  };\n\n  render() {\n    return (\n      <form\n        className=\"input-form\"\n        onSubmit={this.handleMessagePost}\n        type=\"submit\"\n      >\n        <input\n          scrolling=\"no\"\n          className=\"text-input scroll\"\n          type=\"text\"\n          name=\"chatText\"\n          value={this.state.input}\n          placeholder=\"Write your message... and hit ENTER\"\n          onChange={this.handleChange}\n          autoComplete=\"off\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./UsersPanel.css\";\n\nclass UsersPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n    setInterval(this.getUsers, 500);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers = () => {\n    const url = \"http://localhost:3002/api/users/signed-in\";\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const signedInUserId = localStorage.getItem(\"signedInUserId\");\n        const signedUser =\n          data &&\n          data.filter(user => {\n            return user.signed_in_user_id === JSON.parse(signedInUserId);\n          });\n        if (!signedUser || !signedUser.length) {\n          localStorage.setItem(\"signedInUserId\", \"\");\n          window.location.href = \"/login\";\n        }\n        this.setState({ users: data });\n      });\n  };\n\n  render() {\n    const { users } = this.state;\n    if (users) {\n      return (\n        <ul>\n          {users.map((user, index) => {\n            return <li key={index}>{user.name}</li>;\n          })}\n        </ul>\n      );\n    } else {\n      return <p>Loading... </p>;\n    }\n  }\n}\n\nexport default UsersPanel;\n\n// class UsersPanel extends Component {\n//   render() {\n//     return (\n//       <div>\n//         {/* <h4 className=\"users-display\">Users Display</h4> */}\n//         <ul>\n//           <li>Peter</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default UsersPanel;// class UsersPanel extends Component {\n//   render() {\n//     return (\n//       <div>\n//         {/* <h4 className=\"users-display\">Users Display</h4> */}\n//         <ul>\n//           <li>Peter</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//           <li>Peter</li>\n//           <li>Akey</li>\n//           <li>Mimi</li>\n//           <li>Peter</li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default UsersPanel;\n","import React, { Component } from \"react\";\nimport \"./MessagesList.css\";\n\nclass MessagesList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      doScroll: true,\n      isInEditMode: false,\n      editModeId: null\n    };\n    this.messagesEnd = React.createRef();\n    setInterval(this.onLoadMessages, 500);\n  }\n\n  handleOnSentMessage = () => {\n    this.onLoadMessages();\n  };\n\n  onLoadMessages = () => {\n    const url = \"http://localhost:3002/api/messages\";\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        let onNewMessageAdd = this.state.messages.length !== data.length;\n        data = data.sort((a, b) => {\n          return a.message_id - b.message_id;\n        });\n        this.setState({ messages: data, doScroll: onNewMessageAdd });\n      });\n  };\n\n  componentDidMount() {\n    this.onLoadMessages();\n  }\n\n  componentDidUpdate() {\n    if (this.state.doScroll) {\n      this.scrollToEnd();\n      this.setState({ doScroll: false });\n    }\n  }\n\n  changeToEditMode = (e, editModeId) => {\n    e.preventDefault();\n    console.log(\"chnageTOOOEDIT\");\n    this.setState({\n      isInEditMode: true,\n      editModeId\n    });\n  };\n\n  cancelEditMode = () => {\n    console.log(\"cancelEditMode\");\n    this.setState({\n      isInEditMode: false\n    });\n  };\n\n  changeEditMode = (e, editModeId) => {\n    console.log(\"changeEditMode\");\n    if (this.state.isInEditMode && !this.state.input) {\n      // TODO handle error message for the user\n      return;\n    }\n    if (this.state.isInEditMode) {\n      this.handleEditMessage(e, editModeId);\n    }\n    this.setState({\n      isInEditMode: !this.state.isInEditMode,\n      editModeId\n    });\n  };\n\n  handleDeleteMessage = messageId => {\n    const url = `http://localhost:3002/api/messages/${messageId}`;\n    fetch(url, {\n      method: \"DELETE\"\n    });\n    this.onLoadMessages();\n  };\n\n  // getMessageByMessageId = messageId => {\n  //   // const { message } = this.state;\n  //   const url = `http://localhost:3002/api/messages/${messageId}`;\n  //   fetch(url)\n  //     .then(res => {\n  //       res.json();\n  //     })\n  //     .then(data => {\n  //       console.log(\"getMessageByMessageId\", data);\n  //       this.setState({ message: data.message });\n  //     })\n  //     .catch(error => console.error(error));\n  // };\n\n  handleEditMessage = (e, messageId) => {\n    e.preventDefault();\n    const { input } = this.state;\n    console.log(input);\n    const url = `http://localhost:3002/api/messages/${messageId}`;\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // body: JSON.stringify({ message: this.getMessageByMessageId() })\n      body: JSON.stringify({ message: input })\n    })\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n    this.onLoadMessages();\n  };\n\n  handleEditMessageInputChanges = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  scrollToEnd() {\n    if (this.messagesEnd.current !== null) {\n      this.messagesEnd.current.scrollIntoView({\n        behaviour: \"smooth\"\n      });\n    }\n  }\n\n  // makeStyles = theme => ({\n  //   textField: {\n  //     marginLeft: theme.spacing(1),\n  //     marginRight: theme.spacing(1),\n  //     minWidth: 105,\n  //     minHeight: 50,\n  //     maxWidth: 350\n  //   }\n  // });\n\n  render() {\n    const userId = localStorage.getItem(\"userId\");\n    const { isInEditMode, editModeId } = this.state;\n    return (\n      <div>\n        <ul className=\"messages\">\n          {this.state.messages.map((message, index) => {\n            return (\n              <li key={index}>\n                <div className=\"sender\">{message.name}</div>\n                <div className=\"bubble\">\n                  {isInEditMode && message.message_id === editModeId ? (\n                    <form className=\"input-group\">\n                      <textarea\n                        id=\"editTextarea\"\n                        className=\"form-control\"\n                        autoFocus\n                        onFocus={(this.defaultValue = this.onChange)}\n                        rows=\"4\"\n                        // rows-max=\"45\"\n                        type=\"text\"\n                        spellCheck=\"true\"\n                        defaultValue={message.message}\n                        onChange={this.handleEditMessageInputChanges}\n                        autoComplete=\"off\"\n                      ></textarea>\n                      <span\n                        // className=\"input-group\"\n                        style={{ display: \"block\" }}\n                      >\n                        <button\n                          type=\"button\"\n                          onClick={this.cancelEditMode}\n                          className=\"btn-outline-danger ml-1\"\n                          style={{\n                            display: \"inline-block\",\n                            float: \"right\"\n                          }}\n                        >\n                          <i className=\"fa fa-times\"></i>\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={e =>\n                            this.changeEditMode(e, message.message_id)\n                          }\n                          className=\"btn-outline-success ml-0\"\n                          style={{\n                            display: \"inline-block\",\n                            float: \"right\",\n                            position: \"relative\"\n                          }}\n                        >\n                          <i className=\"fa fa-check\"></i>\n                        </button>\n                      </span>\n                    </form>\n                  ) : (\n                    message.message\n                  )}\n\n                  {JSON.parse(userId) === message.user_id ? (\n                    <span style={{ display: \"block\" }}>\n                      <button\n                        className=\"btn btn-link p-0 ml-1 mr-1\"\n                        style={{ display: \"inline-block\", float: \"right\" }}\n                        onClick={() =>\n                          window.confirm(\n                            \"Are you sure you wish to delete this message?\"\n                          ) && this.handleDeleteMessage(message.message_id)\n                        }\n                      >\n                        <i className=\"fa fa-trash fa-lg\"></i>\n                      </button>\n                      <button\n                        className=\"btn btn-link p-0 ml-0 mr-1\"\n                        style={{\n                          display: \"block\",\n                          float: \"right\"\n                        }}\n                        onClick={e =>\n                          this.changeToEditMode(e, message.message_id)\n                        }\n                      >\n                        {isInEditMode &&\n                        message.message_id === editModeId ? null : (\n                          <i className=\"fa fa-pencil-square-o fa-lg\"></i>\n                        )}\n                      </button>\n                    </span>\n                  ) : null}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n        <div ref={this.messagesEnd}></div>\n      </div>\n    );\n  }\n}\n\nexport default MessagesList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Input from \"./Input\";\nimport UsersPanel from \"./UsersPanel\";\nimport MessagesList from \"./MessagesList\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: \"\"\n    };\n  }\n\n  handleLogout = () => {\n    const signedInUserId = localStorage.getItem(\"signedInUserId\");\n    const url = `http://localhost:3002/api/users/signed-in/${signedInUserId}`;\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        localStorage.setItem(\"signedInUserId\", \"\");\n        window.location.href = \"/login\";\n      })\n      .catch(error => {\n        this.setState({\n          isError: true\n        });\n      });\n  };\n\n  render() {\n    const user = localStorage.getItem(\"user\");\n    return (\n      <div className=\"app\">\n        <div className=\"app-header\">\n          <h1 className=\"app-title\">WeeApp</h1>\n          {user ? (\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={this.handleLogout}\n              style={{ position: \"absolute\", top: \"20px\", right: \"20px\" }}\n            >\n              Logout\n            </button>\n          ) : null}\n        </div>\n        {!user ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <div className=\"chat-app\">\n            <div className=\"users-display\">\n              <h4>Users Display</h4>\n            </div>\n            <div className=\"users-panel\">\n              <UsersPanel />\n            </div>\n            <div className=\"messages-board\">\n              <MessagesList />\n            </div>\n            <div className=\"text-area\">\n              <Input user={user} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Button(props) {\n  return (\n    <button type=\"submit\" className=\"btn btn-secondary m-2\">\n      {props.name}\n    </button>\n  );\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./signup.css\";\nimport Button from \"./Button\";\n\nclass Signup extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, email, password } = this.state;\n    if (name && email && password) {\n      const url = \"http://localhost:3002/api/users\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ name, email, password })\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(\"data of signup\", data);\n          if (data && data[0] && data[0].user_id) {\n            window.location.href = \"/login\";\n          }\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app-login\">\n          <label>Create Account</label>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <input\n                className=\"signup\"\n                name=\"name\"\n                placeholder=\"Full name\"\n                type=\"text\"\n                required\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <input\n                className=\"signup\"\n                name=\"email\"\n                placeholder=\"email\"\n                type=\"email\"\n                required\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <input\n                className=\"signup\"\n                name=\"password\"\n                placeholder=\"password\"\n                type=\"password\"\n                required\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </div>\n            <Button name=\"Sign up\" />\n            <br />\n            <p>\n              If you have an account <Link to=\"/login\">click here</Link> to go\n              to the login page\n            </p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport Button from \"./Button\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: null,\n    password: \"\",\n    isError: false\n  };\n\n  onLogin = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (email && password) {\n      const url = \"http://localhost:3002/api/users/login\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ email, password })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res && res.success) {\n            localStorage.setItem(\"user\", res.data.name);\n            localStorage.setItem(\n              \"signedInUserId\",\n              res.signedIn.signed_in_user_id\n            );\n            localStorage.setItem(\"userId\", res.data.user_id);\n\n            window.location.href = \"/\";\n          } else {\n            this.setState({\n              isError: true,\n              message: res.data.message\n            });\n          }\n        })\n        .catch(error => {\n          this.setState({\n            isError: true,\n            message: \"There is an error occurred, Please try again!\"\n          });\n        });\n    }\n  };\n\n  handleInputChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app-login\">\n          <form onSubmit={this.onLogin}>\n            <div>\n              <input\n                className=\"login\"\n                name=\"email\"\n                placeholder=\"email\"\n                type=\"email\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div>\n              <input\n                className=\"login\"\n                name=\"password\"\n                placeholder=\"password\"\n                type=\"password\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <Button name=\"Login\" />\n            <br />\n            <p>\n              If you don't have an account <Link to=\"/signup\">click here</Link>{\" \"}\n              to creat an account\n            </p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\n\n// check whether the component require login\nconst auth = Component => {\n  return () => {\n    const user = localStorage.getItem(\"signedInUserId\");\n    const isLoggedIn = user;\n    console.log(isLoggedIn);\n    if (isLoggedIn) {\n      return <Component />;\n    }\n    // if the user is not logged redirect to the login page\n    return <Redirect to=\"/login\" />;\n  };\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={auth(Home)} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/signup\" exact component={Signup} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}